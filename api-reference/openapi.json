{
  "openapi": "3.0.1",
  "info": {
    "title": "Plato API",
    "description": "Plato API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://api.plato.so"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/start-session": {
      "post": {
        "description": "Creates and starts a new browser session",
        "responses": {
          "200": {
            "description": "Browser session response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/NewBrowserSession"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/end-session": {
      "post": {
        "description": "Ends a browser session",
        "requestBody": {
          "description": "The ID of the browser session to end",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session_id": {
                    "description": "The ID of the browser session to end",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Browser session ended"
          }
        }
      }
    },
    "/api/run-action": {
      "post": {
        "description": "Runs an action in a browser session",
        "responses": {
          "200": {
            "description": "Action response"
          }
        }
      }
    },
    "/api/run-task": {
      "post": {
        "description": "Runs a task in a browser session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session_id": {
                    "description": "The ID of the browser session to run the task in",
                    "type": "string"
                  },
                  "start_url": {
                    "description": "The URL to start the task at",
                    "type": "string",
                    "default": "https://google.com"
                  },
                  "task": {
                    "description": "A description of the task to run",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewBrowserSession": {
        "type": "object",
        "properties": {
          "session_id": {
            "description": "The ID of the browser session",
            "type": "string"
          },
          "debug_url": {
            "description": "The debug URL of the browser session",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
